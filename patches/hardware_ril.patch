diff --git a/libril/ril.cpp b/libril/ril.cpp
index f594b8d..85b2c47 100644
--- a/libril/ril.cpp
+++ b/libril/ril.cpp
@@ -132,7 +132,7 @@ typedef struct RequestInfo {
     CommandInfo *pCI;
     struct RequestInfo *p_next;
     char cancelled;
-    char local;         // responses to local commands do not go back to command process
+    int local;          // responses to local commands do not go back to command process
 } RequestInfo;
 
 typedef struct UserCallbackInfo {
@@ -321,13 +321,13 @@ void   nullParcelReleaseFunction (const uint8_t* data, size_t dataSize,
  * is not sent back up to the command process
  */
 static void
-issueLocalRequest(int request, void *data, int len) {
+issueLocalRequest(int request, void *data, int len, int fd) {
     RequestInfo *pRI;
     int ret;
 
     pRI = (RequestInfo *)calloc(1, sizeof(RequestInfo));
 
-    pRI->local = 1;
+    pRI->local = fd ? fd : 1;
     pRI->token = 0xffffffff;        // token is not used in this context
     pRI->pCI = &(s_commands[request]);
 
@@ -1618,7 +1618,7 @@ static int responseDataCallListV4(Parcel &p, void *response, size_t responselen)
         writeStringToParcel(p, p_cur[i].type);
         // apn is not used, so don't send.
         writeStringToParcel(p, p_cur[i].address);
-        appendPrintBuf("%s[cid=%d,%s,%s,%s],", printBuf,
+        appendPrintBuf("%s[cid=%d,%s,%s,%s,%s],", printBuf,
             p_cur[i].cid,
             (p_cur[i].active==0)?"down":"up",
             (char*)p_cur[i].type,
@@ -2624,12 +2624,12 @@ static void debugCallback (int fd, short flags, void *param) {
     switch (atoi(args[0])) {
         case 0:
             ALOGI ("Connection on debug port: issuing reset.");
-            issueLocalRequest(RIL_REQUEST_RESET_RADIO, NULL, 0);
+            issueLocalRequest(RIL_REQUEST_RESET_RADIO, NULL, 0, 0);
             break;
         case 1:
             ALOGI ("Connection on debug port: issuing radio power off.");
             data = 0;
-            issueLocalRequest(RIL_REQUEST_RADIO_POWER, &data, sizeof(int));
+            issueLocalRequest(RIL_REQUEST_RADIO_POWER, &data, sizeof(int), 0);
             // Close the socket
             close(s_fdCommand);
             s_fdCommand = -1;
@@ -2648,7 +2648,7 @@ static void debugCallback (int fd, short flags, void *param) {
             qxdm_data[4] = 0;         // log_mask
             qxdm_data[5] = 8;         // log_max_fileindex
             issueLocalRequest(RIL_REQUEST_OEM_HOOK_RAW, qxdm_data,
-                              6 * sizeof(int));
+                              6 * sizeof(int), 0);
             break;
         case 4:
             ALOGI ("Debug port: QXDM log disable.");
@@ -2659,48 +2659,56 @@ static void debugCallback (int fd, short flags, void *param) {
             qxdm_data[4] = 0;
             qxdm_data[5] = 8;
             issueLocalRequest(RIL_REQUEST_OEM_HOOK_RAW, qxdm_data,
-                              6 * sizeof(int));
+                              6 * sizeof(int), 0);
             break;
         case 5:
             ALOGI("Debug port: Radio On");
             data = 1;
-            issueLocalRequest(RIL_REQUEST_RADIO_POWER, &data, sizeof(int));
+            issueLocalRequest(RIL_REQUEST_RADIO_POWER, &data, sizeof(int), 0);
             sleep(2);
             // Set network selection automatic.
-            issueLocalRequest(RIL_REQUEST_SET_NETWORK_SELECTION_AUTOMATIC, NULL, 0);
+            issueLocalRequest(RIL_REQUEST_SET_NETWORK_SELECTION_AUTOMATIC, NULL, 0, 0);
             break;
         case 6:
             ALOGI("Debug port: Setup Data Call, Apn :%s\n", args[1]);
             actData[0] = args[1];
             issueLocalRequest(RIL_REQUEST_SETUP_DATA_CALL, &actData,
-                              sizeof(actData));
+                              sizeof(actData), 0);
             break;
         case 7:
             ALOGI("Debug port: Deactivate Data Call");
             issueLocalRequest(RIL_REQUEST_DEACTIVATE_DATA_CALL, &deactData,
-                              sizeof(deactData));
+                              sizeof(deactData), 0);
             break;
         case 8:
             ALOGI("Debug port: Dial Call");
             dialData.clir = 0;
             dialData.address = args[1];
-            issueLocalRequest(RIL_REQUEST_DIAL, &dialData, sizeof(dialData));
+            issueLocalRequest(RIL_REQUEST_DIAL, &dialData, sizeof(dialData), 0);
             break;
         case 9:
             ALOGI("Debug port: Answer Call");
-            issueLocalRequest(RIL_REQUEST_ANSWER, NULL, 0);
+            issueLocalRequest(RIL_REQUEST_ANSWER, NULL, 0, 0);
             break;
         case 10:
             ALOGI("Debug port: End Call");
             issueLocalRequest(RIL_REQUEST_HANGUP, &hangupData,
-                              sizeof(hangupData));
+                              sizeof(hangupData), 0);
+            break;
+        case 11:
+            ALOGI("Debug port: OEM_HOOK_STRINGS, command: %s\n", args[1]);
+            actData[0] = args[1];
+            issueLocalRequest(RIL_REQUEST_OEM_HOOK_STRINGS, &actData,
+                              sizeof(actData), acceptFD);
+            acceptFD = 0;
             break;
         default:
             ALOGE ("Invalid request");
             break;
     }
     freeDebugCallbackArgs(number, args);
-    close(acceptFD);
+    if (acceptFD)
+        close(acceptFD);
 }
 
 
@@ -2945,7 +2953,13 @@ RIL_onRequestComplete(RIL_Token t, RIL_Errno e, void *response, size_t responsel
         // Locally issued command...void only!
         // response does not go back up the command socket
         ALOGD("C[locl]< %s", requestToString(pRI->pCI->requestNumber));
-
+		if (pRI->local > 1) {
+			if (response && responselen == sizeof(char **)) {
+				char **str = (char **)response;
+				write(pRI->local, *str, strlen(*str));
+			}
+			close(pRI->local);
+		}
         goto done;
     }
 
diff --git a/rild/Android.mk b/rild/Android.mk
index a94da12..8a07d8a 100644
--- a/rild/Android.mk
+++ b/rild/Android.mk
@@ -18,7 +18,7 @@ endif # arm
 LOCAL_CFLAGS := -DRIL_SHLIB
 
 LOCAL_MODULE:= rild
-LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE_TAGS := debug
 
 include $(BUILD_EXECUTABLE)
 
diff --git a/rild/radiooptions.c b/rild/radiooptions.c
index 1a4ec11..b5d8f3a 100644
--- a/rild/radiooptions.c
+++ b/rild/radiooptions.c
@@ -34,6 +34,7 @@ enum options {
     DIAL_CALL,
     ANSWER_CALL,
     END_CALL,
+    OEM_HOOK,
 };
 
 
@@ -49,7 +50,8 @@ static void print_usage() {
            7 - DEACTIVE_PDP, \n\
            8 number - DIAL_CALL number, \n\
            9 - ANSWER_CALL, \n\
-           10 - END_CALL \n");
+           10 - END_CALL, \n\
+           11 - OEM_HOOK string \n");
 }
 
 static int error_check(int argc, char * argv[]) {
@@ -59,7 +61,7 @@ static int error_check(int argc, char * argv[]) {
     const int option = atoi(argv[1]);
     if (option < 0 || option > 10) {
         return 0;
-    } else if ((option == DIAL_CALL || option == SETUP_PDP) && argc == 3) {
+    } else if ((option == DIAL_CALL || option == SETUP_PDP || option == OEM_HOOK) && argc == 3) {
         return 0;
     } else if ((option != DIAL_CALL && option != SETUP_PDP) && argc == 2) {
         return 0;
@@ -69,7 +71,7 @@ static int error_check(int argc, char * argv[]) {
 
 static int get_number_args(char *argv[]) {
     const int option = atoi(argv[1]);
-    if (option != DIAL_CALL && option != SETUP_PDP) {
+    if (option != DIAL_CALL && option != SETUP_PDP && option != OEM_HOOK) {
         return 1;
     } else {
         return 2;
@@ -118,7 +120,13 @@ int main(int argc, char *argv[])
             exit(-1);
         }
     }
-
+	/* get result from Hook command */
+    if (!strcmp(argv[1], "11")) {
+        char buf[8192];
+        ret = read(fd, buf, sizeof(buf));
+        if (ret > 0)
+            write(1, buf, ret);
+    }
     close(fd);
     return 0;
 }
